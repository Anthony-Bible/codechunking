golangci-lint run ./...
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:120:18: Multiplication of durations: `duration * duration` (durationcheck)
			sumSquares += duration * duration
			              ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:123:55: Multiplication of durations: `mean * mean` (durationcheck)
		variance := (sumSquares/time.Duration(len(times)) - mean*mean)
		                                                    ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:129:28: Multiplication of durations: `100 * time.Microsecond * time.Microsecond` (durationcheck)
		assert.Less(t, variance, 100*time.Microsecond*time.Microsecond,
		                         ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware.go:274:2: there must be an empty line separating embedded fields from regular fields (embeddedstructfieldcheck)
	http.ResponseWriter
	^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:66:2: there must be an empty line separating embedded fields from regular fields (embeddedstructfieldcheck)
	http.ResponseWriter
	^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:498:2: there must be an empty line separating embedded fields from regular fields (embeddedstructfieldcheck)
	*httptest.ResponseRecorder
	^
GolandProjects/codechunking/internal/application/common/logging/metrics_integration.go:112:2: there must be an empty line separating embedded fields from regular fields (embeddedstructfieldcheck)
	ApplicationLogger
	^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:302:11: Error return value is not checked (errcheck)
	entry := p.pool.Get().(*HTTPLogEntry)
	         ^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util.go:38:8: Error return value is not checked (errcheck)
	pe := encoderPool.Get().(*pooledEncoder)
	      ^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:725:11: Error return value is not checked (errcheck)
	entry := p.pool.Get().(*LogEntry)
	         ^
GolandProjects/codechunking/cmd/api_test.go:637:15: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		if _, ok := err.(viper.ConfigFileNotFoundError); !ok {
		            ^
GolandProjects/codechunking/cmd/root.go:86:15: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		if _, ok := err.(viper.ConfigFileNotFoundError); !ok {
		            ^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:443:6: comparing with == will fail on wrapped errors. Use errors.Is to check for a specific error (errorlint)
		if err == pgx.ErrNoRows {
		   ^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:485:6: comparing with == will fail on wrapped errors. Use errors.Is to check for a specific error (errorlint)
		if err == pgx.ErrNoRows {
		   ^
GolandProjects/codechunking/internal/adapter/outbound/repository/transaction.go:41:75: non-wrapping format verb for fmt.Errorf. Use `%w` to format errors (errorlint)
			return fmt.Errorf("failed to rollback transaction after error %v: %w", err, rollbackErr)
			                                                                       ^
GolandProjects/codechunking/internal/adapter/outbound/repository/transaction.go:71:75: non-wrapping format verb for fmt.Errorf. Use `%w` to format errors (errorlint)
			return fmt.Errorf("failed to rollback transaction after error %v: %w", err, rollbackErr)
			                                                                       ^
GolandProjects/codechunking/internal/application/common/errors_test.go:421:14: type switch on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
	switch e := err.(type) {
	            ^
GolandProjects/codechunking/internal/application/common/validation.go:285:21: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		if secViol, ok := err.(*security.SecurityViolation); ok {
		                  ^
GolandProjects/codechunking/internal/application/common/validation.go:292:21: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		if secViol, ok := err.(*security.SecurityViolation); ok {
		                  ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:55:27: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
					validationErr, ok := appErr.(ValidationError)
					                     ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:96:25: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
			validationErr, ok := appErr.(ValidationError)
			                     ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:145:27: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
					validationErr, ok := err.(ValidationError)
					                     ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:184:17: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
				if _, ok := err.(ValidationError); !ok {
				            ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:262:25: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
			validationErr, ok := appErr.(ValidationError)
			                     ^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:65:19: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
						if _, ok := appErr.(ValidationError); !ok {
						            ^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:93:24: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		validationErr, ok := err.(ValidationError)
		                     ^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:155:26: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
				validationErr, ok := err.(ValidationError)
				                     ^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:210:19: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
						if _, ok := appErr.(ValidationError); !ok {
						            ^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:214:24: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
						validationErr := appErr.(ValidationError)
						                 ^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:72:24: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		validationErr, ok := appErr.(ValidationError)
		                     ^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:134:28: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
			if validationErr, ok := err.(ValidationError); ok {
			                        ^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:148:28: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
			if validationErr, ok := err.(ValidationError); ok {
			                        ^
GolandProjects/codechunking/internal/application/common/validation_test.go:131:26: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
				validationErr, ok := err.(ValidationError)
				                     ^
GolandProjects/codechunking/internal/application/common/validation_test.go:222:17: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
				if _, ok := err.(ValidationError); !ok {
				            ^
GolandProjects/codechunking/internal/application/common/validation_test.go:272:25: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
			validationErr, ok := err.(ValidationError)
			                     ^
GolandProjects/codechunking/internal/application/common/validation_test.go:338:17: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
				if _, ok := err.(ValidationError); !ok {
				            ^
GolandProjects/codechunking/internal/application/common/validation_test.go:382:17: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
				if _, ok := err.(ValidationError); !ok {
				            ^
GolandProjects/codechunking/internal/application/common/validation_test.go:488:24: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		validationErr, ok := appErr.(ValidationError)
		                     ^
GolandProjects/codechunking/internal/application/common/validation_test.go:630:25: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
			validationErr, ok := appErr.(ValidationError)
			                     ^
GolandProjects/codechunking/internal/application/common/validation_test.go:740:25: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
			validationErr, ok := err.(ValidationError)
			                     ^
GolandProjects/codechunking/internal/application/common/validation_test.go:771:23: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
	validationErr, ok := err.(ValidationError)
	                     ^
GolandProjects/codechunking/internal/application/common/validation_test.go:807:15: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
		if _, ok := err.(ValidationError); !ok {
		            ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:293:19: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
	domainErr, ok := err.(*DomainError)
	                 ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:454:19: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
	domainErr, ok := err.(*DomainError)
	                 ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:507:19: type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors (errorlint)
	domainErr, ok := err.(*DomainError)
	                 ^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:1116:4: missing cases in switch of type valueobject.JobStatus: valueobject.JobStatusPending (exhaustive)
			switch status {
			^
GolandProjects/codechunking/internal/application/service/indexing_job_service.go:260:24: missing keys in map of key type valueobject.JobStatus: valueobject.JobStatusPending (exhaustive)
	transitionHandlers := map[valueobject.JobStatus]func() error{
	                      ^
GolandProjects/codechunking/internal/application/service/indexing_job_service.go:406:2: missing cases in switch of type valueobject.RepositoryStatus: valueobject.RepositoryStatusPending, valueobject.RepositoryStatusCompleted, valueobject.RepositoryStatusFailed, valueobject.RepositoryStatusArchived (exhaustive)
	switch currentStatus {
	^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:538:4: missing cases in switch of type valueobject.RepositoryStatus: valueobject.RepositoryStatusPending (exhaustive)
			switch tc.status {
			^
GolandProjects/codechunking/cmd/migrate.go:23:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("migrate called")
		^
GolandProjects/codechunking/cmd/version.go:23:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("version called")
		^
GolandProjects/codechunking/cmd/worker.go:23:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("worker called")
		^
GolandProjects/codechunking/internal/adapter/outbound/repository/errors.go:178:1: constructor "NewRepositoryError" for struct "RepositoryError" should be placed before struct method "Error" (funcorder)
func NewRepositoryError(operation string, err error) *RepositoryError {
^
GolandProjects/codechunking/cmd/api.go:332:5: middlewareDefaults is a global variable (gochecknoglobals)
var middlewareDefaults = MiddlewareDefaults{
    ^
GolandProjects/codechunking/cmd/api.go:382:5: apiCmd is a global variable (gochecknoglobals)
var apiCmd = &cobra.Command{
    ^
GolandProjects/codechunking/cmd/migrate.go:13:5: migrateCmd is a global variable (gochecknoglobals)
var migrateCmd = &cobra.Command{
    ^
GolandProjects/codechunking/cmd/root.go:14:2: cfgFile is a global variable (gochecknoglobals)
	cfgFile string
	^
GolandProjects/codechunking/cmd/root.go:15:2: cfg is a global variable (gochecknoglobals)
	cfg     *config.Config
	^
GolandProjects/codechunking/cmd/root.go:19:5: rootCmd is a global variable (gochecknoglobals)
var rootCmd = &cobra.Command{
    ^
GolandProjects/codechunking/cmd/version.go:13:5: versionCmd is a global variable (gochecknoglobals)
var versionCmd = &cobra.Command{
    ^
GolandProjects/codechunking/cmd/worker.go:13:5: workerCmd is a global variable (gochecknoglobals)
var workerCmd = &cobra.Command{
    ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware.go:443:5: DefaultCORSConfig is a global variable (gochecknoglobals)
var DefaultCORSConfig = CORSConfig{
    ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:113:2: globalHTTPLogEntryPool is a global variable (gochecknoglobals)
	globalHTTPLogEntryPool = &httpLogEntryPool{
	^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:123:2: globalMiddlewareMetrics is a global variable (gochecknoglobals)
	globalMiddlewareMetrics middlewareMetrics
	^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:127:5: logBuffer is a global variable (gochecknoglobals)
var logBuffer *bytes.Buffer
    ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:247:2: rateCounter is a global variable (gochecknoglobals)
	rateCounter   int64
	^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:248:2: lastRateReset is a global variable (gochecknoglobals)
	lastRateReset time.Time
	^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:249:2: rateMutex is a global variable (gochecknoglobals)
	rateMutex     sync.RWMutex
	^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util.go:21:5: encoderPool is a global variable (gochecknoglobals)
var encoderPool = sync.Pool{
    ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:61:5: validHTTPMethods is a global variable (gochecknoglobals)
var validHTTPMethods = map[string]bool{
    ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/helpers.go:264:2: TestRepositoryID1 is a global variable (gochecknoglobals)
	TestRepositoryID1 = uuid.MustParse("123e4567-e89b-12d3-a456-426614174000")
	^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/helpers.go:265:2: TestRepositoryID2 is a global variable (gochecknoglobals)
	TestRepositoryID2 = uuid.MustParse("123e4567-e89b-12d3-a456-426614174001")
	^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/helpers.go:266:2: TestJobID1 is a global variable (gochecknoglobals)
	TestJobID1        = uuid.MustParse("789e0123-e89b-12d3-a456-426614174000")
	^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/helpers.go:267:2: TestJobID2 is a global variable (gochecknoglobals)
	TestJobID2        = uuid.MustParse("789e0123-e89b-12d3-a456-426614174001")
	^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:92:2: globalLogEntryPool is a global variable (gochecknoglobals)
	globalLogEntryPool = &logEntryPool{
	^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:102:2: globalPerformanceMetrics is a global variable (gochecknoglobals)
	globalPerformanceMetrics performanceMetrics
	^
GolandProjects/codechunking/internal/application/common/security/patterns.go:37:2: patterns is a global variable (gochecknoglobals)
	patterns     *Patterns
	^
GolandProjects/codechunking/internal/application/common/security/patterns.go:38:2: patternsOnce is a global variable (gochecknoglobals)
	patternsOnce sync.Once
	^
GolandProjects/codechunking/internal/application/common/security/patterns.go:82:5: StringPatterns is a global variable (gochecknoglobals)
var StringPatterns = struct {
    ^
GolandProjects/codechunking/internal/application/common/security/patterns.go:139:5: HTMLEntities is a global variable (gochecknoglobals)
var HTMLEntities = map[string]string{
    ^
GolandProjects/codechunking/internal/application/common/security/patterns.go:152:5: URLEncodings is a global variable (gochecknoglobals)
var URLEncodings = map[string][]string{
    ^
GolandProjects/codechunking/internal/application/common/validation.go:14:5: ValidJobStatuses is a global variable (gochecknoglobals)
var ValidJobStatuses = map[string]bool{
    ^
GolandProjects/codechunking/internal/domain/normalization/convenience.go:8:5: defaultNormalizer is a global variable (gochecknoglobals)
var defaultNormalizer *URLNormalizer
    ^
GolandProjects/codechunking/internal/domain/valueobject/job_status.go:18:5: validJobStatuses is a global variable (gochecknoglobals)
var validJobStatuses = map[JobStatus]bool{
    ^
GolandProjects/codechunking/internal/domain/valueobject/repository_status.go:19:5: validRepositoryStatuses is a global variable (gochecknoglobals)
var validRepositoryStatuses = map[RepositoryStatus]bool{
    ^
GolandProjects/codechunking/cmd/api.go:453:1: don't use `init` function (gochecknoinits)
func init() {
^
GolandProjects/codechunking/cmd/migrate.go:27:1: don't use `init` function (gochecknoinits)
func init() {
^
GolandProjects/codechunking/cmd/root.go:42:1: don't use `init` function (gochecknoinits)
func init() {
^
GolandProjects/codechunking/cmd/version.go:27:1: don't use `init` function (gochecknoinits)
func init() {
^
GolandProjects/codechunking/cmd/worker.go:27:1: don't use `init` function (gochecknoinits)
func init() {
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:129:1: don't use `init` function (gochecknoinits)
func init() {
^
GolandProjects/codechunking/internal/domain/normalization/convenience.go:10:1: don't use `init` function (gochecknoinits)
func init() {
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:134:1: cognitive complexity 40 of func `NewStructuredLoggingMiddleware` is high (> 20) (gocognit)
func NewStructuredLoggingMiddleware(config LoggingConfig) func(http.Handler) http.Handler {
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware_test.go:454:1: cognitive complexity 30 of func `TestStructuredLoggingMiddleware_SecurityLogging` is high (> 20) (gocognit)
func TestStructuredLoggingMiddleware_SecurityLogging(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware_test.go:294:1: cognitive complexity 26 of func `TestMiddlewareChain` is high (> 20) (gocognit)
func TestMiddlewareChain(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:243:1: cognitive complexity 24 of func `TestRouteRegistry_PathParameterExtraction` is high (> 20) (gocognit)
func TestRouteRegistry_PathParameterExtraction(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:325:1: cognitive complexity 21 of func `TestValidatePattern_ThreadSafety` is high (> 20) (gocognit)
func TestValidatePattern_ThreadSafety(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:402:1: cognitive complexity 23 of func `TestValidatePattern_EdgeCasesWithPackageVariable` is high (> 20) (gocognit)
func TestValidatePattern_EdgeCasesWithPackageVariable(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:47:1: cognitive complexity 21 of func `(*SecurityMiddleware).ValidateInput` is high (> 20) (gocognit)
func (sm *SecurityMiddleware) ValidateInput(next http.Handler) http.Handler {
^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net.go:15:1: cognitive complexity 26 of func `ClientIP` is high (> 20) (gocognit)
func ClientIP(r *http.Request) string {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:126:1: cognitive complexity 41 of func `(*HealthServiceAdapter).checkNATSHealthWithTimeout` is high (> 20) (gocognit)
func (h *HealthServiceAdapter) checkNATSHealthWithTimeout(ctx context.Context) dto.DependencyStatus {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:128:1: cognitive complexity 38 of func `TestHealthServiceAdapter_ConcurrentAccess` is high (> 20) (gocognit)
func TestHealthServiceAdapter_ConcurrentAccess(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:462:1: cognitive complexity 24 of func `TestHealthServiceAdapter_StressTest` is high (> 20) (gocognit)
func TestHealthServiceAdapter_StressTest(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:91:1: cognitive complexity 21 of func `(*NATSMessagePublisher).PublishIndexingJob` is high (> 20) (gocognit)
func (n *NATSMessagePublisher) PublishIndexingJob(ctx context.Context, repositoryID uuid.UUID, repositoryURL string) error {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/connection_test.go:14:1: cognitive complexity 22 of func `TestDatabaseConnection_NewConnection` is high (> 20) (gocognit)
func TestDatabaseConnection_NewConnection(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/error_handling_test.go:291:1: cognitive complexity 32 of func `TestInvalidInput` is high (> 20) (gocognit)
func TestInvalidInput(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:77:1: cognitive complexity 42 of func `TestIndexingJobRepository_FindByID` is high (> 20) (gocognit)
func TestIndexingJobRepository_FindByID(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:167:1: cognitive complexity 52 of func `TestIndexingJobRepository_FindByRepositoryID` is high (> 20) (gocognit)
func TestIndexingJobRepository_FindByRepositoryID(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:362:1: cognitive complexity 47 of func `TestIndexingJobRepository_Update` is high (> 20) (gocognit)
func TestIndexingJobRepository_Update(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:508:1: cognitive complexity 21 of func `TestIndexingJobRepository_Delete` is high (> 20) (gocognit)
func TestIndexingJobRepository_Delete(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:17:1: cognitive complexity 73 of func `TestSoftDeleteFunctionality` is high (> 20) (gocognit)
func TestSoftDeleteFunctionality(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:181:1: cognitive complexity 28 of func `TestDatabaseConstraintValidation` is high (> 20) (gocognit)
func TestDatabaseConstraintValidation(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:287:1: cognitive complexity 104 of func `TestPaginationAndPerformance` is high (> 20) (gocognit)
func TestPaginationAndPerformance(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:552:1: cognitive complexity 103 of func `TestConcurrentAccess` is high (> 20) (gocognit)
func TestConcurrentAccess(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:797:1: cognitive complexity 136 of func `TestDomainEntityIntegration` is high (> 20) (gocognit)
func TestDomainEntityIntegration(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:147:1: cognitive complexity 35 of func `(*PostgreSQLRepositoryRepository).FindAll` is high (> 20) (gocognit)
func (r *PostgreSQLRepositoryRepository) FindAll(ctx context.Context, filters outbound.RepositoryFilters) ([]*entity.Repository, int, error) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:143:1: cognitive complexity 41 of func `TestRepositoryRepository_FindByID` is high (> 20) (gocognit)
func TestRepositoryRepository_FindByID(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:225:1: cognitive complexity 37 of func `TestRepositoryRepository_FindByURL` is high (> 20) (gocognit)
func TestRepositoryRepository_FindByURL(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:300:1: cognitive complexity 65 of func `TestRepositoryRepository_FindAll` is high (> 20) (gocognit)
func TestRepositoryRepository_FindAll(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:516:1: cognitive complexity 43 of func `TestRepositoryRepository_Update` is high (> 20) (gocognit)
func TestRepositoryRepository_Update(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_url_query_consistency_test.go:156:1: cognitive complexity 26 of func `TestRepositoryURLConsistency_StorageAndQueryUseSameFormat` is high (> 20) (gocognit)
func TestRepositoryURLConsistency_StorageAndQueryUseSameFormat(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_url_query_consistency_test.go:347:1: cognitive complexity 21 of func `TestURLStorageMethodsConsistency` is high (> 20) (gocognit)
func TestURLStorageMethodsConsistency(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/transaction_test.go:124:1: cognitive complexity 26 of func `TestTransactionManager_AtomicOperations` is high (> 20) (gocognit)
func TestTransactionManager_AtomicOperations(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/transaction_test.go:209:1: cognitive complexity 25 of func `TestTransactionManager_Isolation` is high (> 20) (gocognit)
func TestTransactionManager_Isolation(t *testing.T) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/transaction_test.go:299:1: cognitive complexity 37 of func `TestTransactionManager_DeadlockHandling` is high (> 20) (gocognit)
func TestTransactionManager_DeadlockHandling(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:454:1: cognitive complexity 33 of func `(*applicationLoggerImpl).logEntry` is high (> 20) (gocognit)
func (l *applicationLoggerImpl) logEntry(ctx context.Context, level, message, errorStr string, fields Fields) {
^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:778:1: cognitive complexity 29 of func `getLoggerOutputByOperation` is high (> 20) (gocognit)
func getLoggerOutputByOperation(logger interface{}, operation string) string {
^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:13:1: cognitive complexity 69 of func `TestValidateRepositoryStatus_DomainIntegrationRequired` is high (> 20) (gocognit)
func TestValidateRepositoryStatus_DomainIntegrationRequired(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:160:1: cognitive complexity 34 of func `TestValidateRepositoryStatus_MapRemovalRequired` is high (> 20) (gocognit)
func TestValidateRepositoryStatus_MapRemovalRequired(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:32:1: cognitive complexity 23 of func `TestValidateRepositoryStatus_DomainLayerIntegration` is high (> 20) (gocognit)
func TestValidateRepositoryStatus_DomainLayerIntegration(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:109:1: cognitive complexity 21 of func `TestValidateRepositoryStatus_RefactoringRequirements` is high (> 20) (gocognit)
func TestValidateRepositoryStatus_RefactoringRequirements(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:187:1: cognitive complexity 28 of func `TestValidateRepositoryStatus_FailingTestsForRefactoring` is high (> 20) (gocognit)
func TestValidateRepositoryStatus_FailingTestsForRefactoring(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:97:1: cognitive complexity 24 of func `TestValidateRepositoryStatus_RefactoringCompletionCriteria` is high (> 20) (gocognit)
func TestValidateRepositoryStatus_RefactoringCompletionCriteria(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/validation_test.go:12:1: cognitive complexity 24 of func `TestValidateRepositoryStatus` is high (> 20) (gocognit)
func TestValidateRepositoryStatus(t *testing.T) {
^
GolandProjects/codechunking/internal/application/common/validation_test.go:392:1: cognitive complexity 32 of func `TestValidateRepositoryStatus_FailingRedPhaseTests` is high (> 20) (gocognit)
func TestValidateRepositoryStatus_FailingRedPhaseTests(t *testing.T) {
^
GolandProjects/codechunking/internal/domain/entity/domain_error_test.go:285:1: cognitive complexity 26 of func `TestDomainError_EdgeCases` is high (> 20) (gocognit)
func TestDomainError_EdgeCases(t *testing.T) {
^
GolandProjects/codechunking/internal/domain/valueobject/job_status_test.go:267:1: cognitive complexity 32 of func `TestJobStatus_TransitionChains` is high (> 20) (gocognit)
func TestJobStatus_TransitionChains(t *testing.T) {
^
GolandProjects/codechunking/internal/domain/valueobject/repository_status_test.go:290:1: cognitive complexity 25 of func `TestRepositoryStatus_TransitionChains` is high (> 20) (gocognit)
func TestRepositoryStatus_TransitionChains(t *testing.T) {
^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_fuzz_test.go:126:1: cognitive complexity 35 of func `FuzzURLEquivalenceDetection` is high (> 20) (gocognit)
func FuzzURLEquivalenceDetection(f *testing.F) {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:511:41: string `invalid metrics detected` has 3 occurrences, make it a constant (goconst)
		return dto.DependencyStatusUnhealthy, "invalid metrics detected", true
		                                      ^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository.go:129:13: string `ORDER BY created_at DESC` has 3 occurrences, make it a constant (goconst)
	orderBy := "ORDER BY created_at DESC"
	           ^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:199:20: string `desc` has 3 occurrences, make it a constant (goconst)
			if direction == "desc" {
			                ^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:234:7: string `buffer` has 7 occurrences, make it a constant (goconst)
	case "buffer":
	     ^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:575:25: string `json` has 5 occurrences, make it a constant (goconst)
		if l.config.Format == "json" {
		                      ^
GolandProjects/codechunking/internal/application/common/logging/correlation.go:305:29: string `service` has 3 occurrences, make it a constant (goconst)
	if s.scenario.Component == "service" {
	                           ^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:151:12: string `ERROR` has 6 occurrences, make it a constant (goconst)
			level = "ERROR"
			        ^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:155:12: string `WARN` has 4 occurrences, make it a constant (goconst)
			level = "WARN"
			        ^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:158:12: string `INFO` has 10 occurrences, make it a constant (goconst)
			level = "INFO"
			        ^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:199:11: string `DEBUG` has 4 occurrences, make it a constant (goconst)
	level := "DEBUG"
	         ^
GolandProjects/codechunking/internal/application/common/security/logger.go:101:19: string `HIGH` has 4 occurrences, make it a constant (goconst)
	case "CRITICAL", "HIGH":
	                 ^
GolandProjects/codechunking/internal/application/common/security/logger.go:110:7: string `MEDIUM` has 3 occurrences, make it a constant (goconst)
	case "MEDIUM":
	     ^
GolandProjects/codechunking/internal/application/common/security/logger.go:120:29: string `DEBUG` has 4 occurrences, make it a constant (goconst)
		if dsl.config.LogLevel == "DEBUG" {
		                          ^
GolandProjects/codechunking/cmd/api.go:417:3: exitAfterDefer: os.Exit will exit, and `defer startCancel()` will not run (gocritic)
		os.Exit(1)
		^
GolandProjects/codechunking/cmd/api.go:447:3: exitAfterDefer: os.Exit will exit, and `defer shutdownCancel()` will not run (gocritic)
		os.Exit(1)
		^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:413:3: assignOp: replace `message = message + " error"` with `message += " error"` (gocritic)
		message = message + " error"
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:314:4: ifElseChain: rewrite if-else to switch statement (gocritic)
			if strings.Contains(tt.path, "/jobs/") {
			^
GolandProjects/codechunking/internal/adapter/inbound/api/security_integration_test.go:428:3: ifElseChain: rewrite if-else to switch statement (gocritic)
		if r.Method == http.MethodPost && r.URL.Path == "/repositories" {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:74:5: ifElseChain: rewrite if-else to switch statement (gocritic)
				if violations[0].Error() == "payload too large" {
				^
GolandProjects/codechunking/internal/adapter/outbound/repository/connection_test.go:198:11: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
			} else {
			       ^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:557:14: unlambda: replace `func() uuid.UUID {
	return uuid.New()
}` with `uuid.New` (gocritic)
			setupJob: func() uuid.UUID {
			          ^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:673:15: unlambda: replace `func() uuid.UUID {
	return uuid.New()
}` with `uuid.New` (gocritic)
			setupRepo: func() uuid.UUID {
			           ^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:150:3: ifElseChain: rewrite if-else to switch statement (gocritic)
		if !event.Success && event.Error != nil {
		^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:99:11: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
			} else {
			       ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:148:13: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
					} else {
					       ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:256:3: ifElseChain: rewrite if-else to switch statement (gocritic)
		if domainErr == nil && appErr != nil {
		^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:165:11: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
			} else {
			       ^
GolandProjects/codechunking/internal/application/common/validation_test.go:146:11: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
			} else {
			       ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:296:9: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
	} else {
	       ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:457:9: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
	} else {
	       ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:510:9: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
	} else {
	       ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:576:6: dupArg: suspicious method call with the same argument and receiver (gocritic)
	if !repo1.Equal(repo1) {
	    ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_test.go:387:11: elseif: can replace 'else {if cond {}}' with 'else if cond {}' (gocritic)
			} else {
			       ^
GolandProjects/codechunking/internal/application/common/converter.go:10:1: Comment should end in a period (godot)
// EntityToRepositoryResponse converts a repository entity to response DTO
^
GolandProjects/codechunking/internal/application/common/converter.go:28:1: Comment should end in a period (godot)
// EntityToIndexingJobResponse converts an indexing job entity to response DTO
^
GolandProjects/codechunking/internal/application/common/converter.go:54:1: Comment should end in a period (godot)
// This helper function generates a reasonable default name for repositories
^
GolandProjects/codechunking/internal/application/common/converter.go:72:1: Comment should end in a period (godot)
// CreatePaginationResponse creates a standardized pagination response
^
GolandProjects/codechunking/internal/application/common/defaults.go:5:1: Comment should end in a period (godot)
// Default pagination limits
^
GolandProjects/codechunking/internal/application/common/defaults.go:14:1: Comment should end in a period (godot)
// ApplyRepositoryListDefaults applies default values to repository list query
^
GolandProjects/codechunking/internal/application/common/defaults.go:24:1: Comment should end in a period (godot)
// ApplyIndexingJobListDefaults applies default values to indexing job list query
^
GolandProjects/codechunking/internal/application/common/errors.go:11:1: Comment should end in a period (godot)
// ServiceError represents a service-level error with context
^
GolandProjects/codechunking/internal/application/common/errors.go:17:1: Comment should end in a period (godot)
// Error implements the error interface
^
GolandProjects/codechunking/internal/application/common/errors.go:22:1: Comment should end in a period (godot)
// Unwrap returns the underlying error
^
GolandProjects/codechunking/internal/application/common/errors.go:27:1: Comment should end in a period (godot)
// WrapServiceError wraps an error with service operation context
^
GolandProjects/codechunking/internal/application/common/errors.go:38:1: Comment should end in a period (godot)
// Common error operations for consistent messaging
^
GolandProjects/codechunking/internal/application/common/errors.go:55:1: Comment should end in a period (godot)
// ValidationError limits and constants
^
GolandProjects/codechunking/internal/application/common/errors.go:57:2: Comment should end in a period (godot)
	// MaxFieldLength is the maximum allowed length for a field name
	^
GolandProjects/codechunking/internal/application/common/errors.go:59:2: Comment should end in a period (godot)
	// MaxMessageLength is the maximum allowed length for an error message
	^
GolandProjects/codechunking/internal/application/common/errors.go:61:2: Comment should end in a period (godot)
	// DefaultField is used when field name cannot be determined or is invalid
	^
GolandProjects/codechunking/internal/application/common/errors.go:63:2: Comment should end in a period (godot)
	// DefaultMessage is used when error message cannot be determined or is invalid
	^
GolandProjects/codechunking/internal/application/common/errors.go:121:1: Comment should end in a period (godot)
// ToDTO converts ValidationError to dto.ValidationError
^
GolandProjects/codechunking/internal/application/common/errors_test.go:10:1: Comment should end in a period (godot)
// TestNewValidationError tests the basic constructor function
^
GolandProjects/codechunking/internal/application/common/errors_test.go:94:1: Comment should end in a period (godot)
// TestNewValidationErrorWithValue tests the constructor with value
^
GolandProjects/codechunking/internal/application/common/errors_test.go:180:1: Comment should end in a period (godot)
// TestValidationError_Error tests the error interface implementation
^
GolandProjects/codechunking/internal/application/common/errors_test.go:252:1: Comment should end in a period (godot)
// TestValidationError_ToDTO tests conversion to DTO type
^
GolandProjects/codechunking/internal/application/common/errors_test.go:330:1: Comment should end in a period (godot)
// TestValidationError_FieldValidation tests field validation constraints
^
GolandProjects/codechunking/internal/application/common/errors_test.go:408:1: Comment should end in a period (godot)
// TestValidationError_ErrorInterface tests that ValidationError implements error interface
^
GolandProjects/codechunking/internal/application/common/errors_test.go:431:1: Comment should end in a period (godot)
// TestValidationError_IsNil tests nil handling
^
GolandProjects/codechunking/internal/application/common/errors_test.go:447:1: Comment should end in a period (godot)
// TestValidationError_Consistency tests consistency across different creation methods
^
GolandProjects/codechunking/internal/application/common/errors_test.go:482:1: Comment should end in a period (godot)
// TestValidationError_EdgeCases tests various edge cases
^
GolandProjects/codechunking/internal/application/common/input_sanitization_fuzz_test.go:9:1: Comment should end in a period (godot)
// FuzzInputSanitization tests input sanitization with random malicious inputs
^
GolandProjects/codechunking/internal/application/common/validation.go:13:1: Comment should end in a period (godot)
// ValidJobStatuses defines all valid job statuses
^
GolandProjects/codechunking/internal/application/common/validation.go:22:1: Comment should end in a period (godot)
// ValidateRepositoryURL validates that a repository URL is not empty
^
GolandProjects/codechunking/internal/application/common/validation.go:30:1: Comment should end in a period (godot)
// ValidateRepositoryName validates repository name constraints with security checks
^
GolandProjects/codechunking/internal/application/common/validation.go:73:1: Comment should end in a period (godot)
// ValidateRepositoryStatus validates repository status with security checks
^
GolandProjects/codechunking/internal/application/common/validation.go:88:1: Comment should end in a period (godot)
// ValidateJobStatus validates job status
^
GolandProjects/codechunking/internal/application/common/validation.go:96:1: Comment should end in a period (godot)
// ValidateUUID validates that a UUID is not nil/empty
^
GolandProjects/codechunking/internal/application/common/validation.go:104:1: Comment should end in a period (godot)
// ValidatePaginationLimit validates pagination limit constraints
^
GolandProjects/codechunking/internal/application/common/validation.go:114:1: Comment should end in a period (godot)
// ValidateSortParameter validates sort parameters for SQL injection
^
GolandProjects/codechunking/internal/application/common/validation.go:162:1: Comment should end in a period (godot)
// ValidatePaginationLimitString validates pagination limit string for SQL injection
^
GolandProjects/codechunking/internal/application/common/validation.go:178:1: Comment should end in a period (godot)
// ValidateOffsetParameter validates offset parameters for SQL injection
^
GolandProjects/codechunking/internal/application/common/validation.go:194:1: Comment should end in a period (godot)
// ValidateQueryParameters validates all query parameters for security issues
^
GolandProjects/codechunking/internal/application/common/validation.go:228:1: Comment should end in a period (godot)
// ValidateJSONField validates individual JSON fields for security issues
^
GolandProjects/codechunking/internal/application/common/validation.go:262:1: Comment should end in a period (godot)
// EnhancedValidator provides improved validation with configurable security policies
^
GolandProjects/codechunking/internal/application/common/validation.go:269:1: Comment should end in a period (godot)
// NewEnhancedValidator creates a new enhanced validator with custom configuration
^
GolandProjects/codechunking/internal/application/common/validation.go:281:1: Comment should end in a period (godot)
// ValidateAllSecurityThreats performs comprehensive security validation
^
GolandProjects/codechunking/internal/application/common/validation.go:301:1: Comment should end in a period (godot)
// ValidateWithCustomRules validates input with custom security rules
^
GolandProjects/codechunking/internal/application/common/validation.go:333:1: Comment should end in a period (godot)
// containsControlCharacters maintains backward compatibility
^
GolandProjects/codechunking/internal/application/common/validation.go:338:1: Comment should end in a period (godot)
// containsSuspiciousUnicode maintains backward compatibility
^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:10:1: Comment should end in a period (godot)
// These tests specifically target the refactoring requirement to eliminate duplicate validation logic
^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:34:1: Comment should end in a period (godot)
// TestValidateRepositoryStatus_DomainLayerMustBeUsed are tests that FAIL until domain layer is used
^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:96:1: Comment should end in a period (godot)
// TestValidateRepositoryStatus_RefactoringCompletionCriteria defines what "done" looks like
^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:157:1: Comment should end in a period (godot)
// TestValidateRepositoryStatus_CurrentImplementationProblems identifies issues with current approach
^
GolandProjects/codechunking/cmd/root.go:8:1: File is not properly formatted (goimports)
	"codechunking/internal/config"
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware.go:13:1: File is not properly formatted (goimports)
	"codechunking/internal/adapter/inbound/api/util"
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:17:1: File is not properly formatted (goimports)
	"codechunking/internal/adapter/inbound/api/util"
^
GolandProjects/codechunking/internal/application/common/validation.go:9:1: File is not properly formatted (goimports)
	"codechunking/internal/domain/valueobject"
^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:155:1: File is not properly formatted (golines)
				assert.Equal(t, *tt.errorHandlingEnabled, errorResult, "Error handling middleware should respect config")
^
GolandProjects/codechunking/cmd/api_test.go:506:1: File is not properly formatted (golines)
			body:       fmt.Sprintf(`{"status":"healthy","version":"1.0.0","timestamp":"%s"}`, time.Now().Format(time.RFC3339)),
^
GolandProjects/codechunking/cmd/build_dependencies_test.go:236:1: File is not properly formatted (golines)
	assert.NotNil(t, repositoryService, "CreateRepositoryService should return a repository service when dependencies are available")
^
GolandProjects/codechunking/internal/adapter/inbound/api/duplicate_detection_api_simple_test.go:113:1: File is not properly formatted (golines)
func (m *MockRepositoryService) CreateRepository(ctx context.Context, request dto.CreateRepositoryRequest) (*dto.RepositoryResponse, error) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:323:1: File is not properly formatted (golines)
func logHTTPRequestAsync(config LoggingConfig, correlationID string, r *http.Request, rw *responseWriter, duration time.Duration, asyncChannel chan asyncHTTPLogEvent) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware_test.go:43:1: File is not properly formatted (golines)
			expectedFields: []string{"method", "path", "query", "status", "duration", "user_agent", "client_ip", "correlation_id"},
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware_test.go:33:1: File is not properly formatted (golines)
		createLoggingTestCase("logs_request_with_query_parameters", http.MethodGet, "/repositories?limit=10&offset=20", http.StatusOK,
^
GolandProjects/codechunking/internal/adapter/inbound/api/repository_handler.go:295:1: File is not properly formatted (golines)
		return uuid.Nil, common.NewValidationError(paramName, fmt.Sprintf("%s ID is required in URL path", resourceType))
^
GolandProjects/codechunking/internal/adapter/inbound/api/repository_handler_test.go:629:1: File is not properly formatted (golines)
			req := testutil.CreateRequestWithMuxVars(http.MethodGet, "/repositories/"+tt.repositoryID+"/jobs"+tt.queryParams, vars)
^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:44:1: File is not properly formatted (golines)
	assert.Equal(t, "application/json", recorder.Header().Get("Content-Type"), "Content-Type should be application/json")
^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:54:1: File is not properly formatted (golines)
	return fmt.Errorf("newRouteConflictError %s: pattern '%s' conflicts with existing pattern '%s'", conflictType, newPattern, existingPattern)
^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:741:1: File is not properly formatted (golines)
				expectedParams:   []string{"INVALID", "INVALID /health", "must be one of GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS"},
^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:98:1: File is not properly formatted (golines)
		assert.True(t, found, "Expected package-level HTTP methods variable to exist with one of these names: %v", possibleNames)
^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware_consistency_test.go:72:1: File is not properly formatted (golines)
				assert.Equal(t, unifiedValue, legacyValue,
^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:187:1: File is not properly formatted (golines)
func NewServer(config *config.Config, healthService inbound.HealthService, repoService inbound.RepositoryService, errorHandler ErrorHandler) (*Server, error) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/helpers.go:343:1: File is not properly formatted (golines)
func (b *RepositoryListResponseBuilder) WithRepositories(repos []dto.RepositoryResponse) *RepositoryListResponseBuilder {
^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/mocks.go:81:1: File is not properly formatted (golines)
func (m *MockRepositoryService) CreateRepository(ctx context.Context, request dto.CreateRepositoryRequest) (*dto.RepositoryResponse, error) {
^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:60:1: File is not properly formatted (golines)
func (m *MockMessagePublisherWithHealthMonitoring) PublishIndexingJob(ctx context.Context, repositoryID uuid.UUID, repositoryURL string) error {
^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:31:1: File is not properly formatted (golines)
	assert.Equal(t, expectedValue, actualValue, "Header %s should have value %s, got %s", headerName, expectedValue, actualValue)
^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net_test.go:559:1: File is not properly formatted (golines)
				t.Errorf("ClientIP() = %q, want %q\nDescription: %s\nScenario: %s", result, tt.expectedIP, tt.description, tt.scenario)
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:184:1: File is not properly formatted (golines)
						if details.CircuitBreaker != "open" && details.CircuitBreaker != "closed" && details.CircuitBreaker != "half-open" {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:49:1: File is not properly formatted (golines)
func (m *MockMessagePublisherWithHealth) PublishIndexingJob(ctx context.Context, repositoryID uuid.UUID, repositoryURL string) error {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_error_scenarios_test.go:576:1: File is not properly formatted (golines)
		assert.Equal(t, int64(100), natsDetails.MessageMetrics.FailedCount)  // Should be adjusted due to incompatibility
^
GolandProjects/codechunking/internal/adapter/inbound/service/repository_service_adapter.go:27:1: File is not properly formatted (golines)
func (a *RepositoryServiceAdapter) CreateRepository(ctx context.Context, request dto.CreateRepositoryRequest) (*dto.RepositoryResponse, error) {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/duplicate_detection_repository_test.go:294:1: File is not properly formatted (golines)
				assert.Equal(t, "Test repository", *foundRepo.Description(), "Found repository should have correct description")
^
GolandProjects/codechunking/internal/adapter/outbound/repository/errors.go:49:1: File is not properly formatted (golines)
	return errors.Is(err, ErrConstraintViolation) || errors.Is(err, ErrAlreadyExists) || errors.Is(err, ErrForeignKeyViolation)
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository.go:100:1: File is not properly formatted (golines)
	return r.scanIndexingJob(id, repositoryID, statusStr, startedAt, completedAt, errorMessage, filesProcessed, chunksCreated, createdAt, updatedAt, deletedAt)
^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:305:1: File is not properly formatted (golines)
			testRepo := entity.NewRepository(testURL, "Repository "+string(rune('A'+i%26))+string(rune('0'+i/26)), nil, nil)
^
GolandProjects/codechunking/internal/adapter/outbound/repository/query_builder_helper_test.go:158:1: File is not properly formatted (golines)
		ctx, qi,
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:125:1: File is not properly formatted (golines)
	return r.scanRepositoryFromTime(id, repoURL, name, description, defaultBranch, lastIndexedAt, lastCommitHash, totalFiles, totalChunks, statusStr, createdAt, updatedAt, deletedAt)
^
GolandProjects/codechunking/internal/adapter/outbound/repository/transaction.go:55:1: File is not properly formatted (golines)
func (tm *TransactionManager) WithTransactionIsolation(ctx context.Context, isolation pgx.TxIsoLevel, fn func(context.Context) error) error {
^
GolandProjects/codechunking/internal/application/common/input_sanitization_fuzz_test.go:85:1: File is not properly formatted (golines)
						t.Errorf("SECURITY FAIL: Malicious content in JSON field %s was not detected: %q", key, strValue)
^
GolandProjects/codechunking/internal/application/common/sql_injection_prevention_test.go:312:1: File is not properly formatted (golines)
					assert.Contains(t, offsetErr.Error(), tt.errorContains, "Offset error should indicate security issue")
^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:48:1: File is not properly formatted (golines)
					t.Errorf("REFACTORING REQUIRED: Status %q - Domain validation and application validation must behave identically.\nDomain error: %v\nApplication error: %v\nThis test will pass once ValidateRepositoryStatus uses domain layer validation.",
^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:26:1: File is not properly formatted (golines)
			t.Errorf("ValidateRepositoryStatus('') should use domain validation with allowEmpty=true and return nil, got: %v", err)
^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:84:1: File is not properly formatted (golines)
			t.Errorf("REFACTORING REQUIRED: ValidationError message should be 'invalid status' (standard application message), got %q", validationErr.Message)
^
GolandProjects/codechunking/internal/application/common/validation_test.go:139:1: File is not properly formatted (golines)
					t.Errorf("ValidateRepositoryStatus(%q) error field = %q, want %q", tt.status, validationErr.Field, "status")
^
GolandProjects/codechunking/internal/application/dto/commands.go:12:1: File is not properly formatted (golines)
	Name          *string `json:"name,omitempty" validate:"omitempty,max=255"`
^
GolandProjects/codechunking/internal/application/dto/indexing_job.go:32:1: File is not properly formatted (golines)
	Limit  int `form:"limit" validate:"omitempty,min=1,max=50"`
^
GolandProjects/codechunking/internal/application/dto/repository.go:11:1: File is not properly formatted (golines)
	URL           string  `json:"url" validate:"required,url"`
^
GolandProjects/codechunking/internal/domain/entity/domain_error_test.go:51:1: File is not properly formatted (golines)
			name:     "Very long message",
^
GolandProjects/codechunking/internal/domain/normalization/url_normalizer.go:172:1: File is not properly formatted (golines)
		return "", fmt.Errorf("unsupported host: %s. Supported hosts: %s", parsedURL.Host, strings.Join(supportedHosts, ", "))
^
GolandProjects/codechunking/internal/domain/valueobject/repository_status_new_functions_test.go:175:1: File is not properly formatted (golines)
				t.Errorf("Expected IsValidRepositoryStatusStringWithEmpty(%q) to be %v, got %v", tc.input, tc.expected, result)
^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:153:1: File is not properly formatted (golines)
		if r == '\x00' || r == '\r' || r == '\n' || (r >= '\x01' && r <= '\x08') || (r >= '\x0b' && r <= '\x0c') || (r >= '\x0e' && r <= '\x1f') {
^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_fuzz_test.go:114:1: File is not properly formatted (golines)
			t.Errorf("Creating RepositoryURL from normalized URL should not fail: %s -> %s (error: %v)", url, normalizedURL, err2)
^
GolandProjects/codechunking/internal/port/inbound/repository_service.go:18:1: File is not properly formatted (golines)
	GetRepositoryJobs(ctx context.Context, repositoryID uuid.UUID, query dto.IndexingJobListQuery) (*dto.IndexingJobListResponse, error)
^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:167:8: G404: Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand) (gosec)
				if rand.Float64() > config.SampleRate {
				   ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:279:22: G115: integer overflow conversion uint64 -> int64 (gosec)
			currentMB := int64(m.Alloc / 1024 / 1024)
			                  ^
GolandProjects/codechunking/internal/adapter/outbound/repository/connection.go:72:30: G115: integer overflow conversion int -> int32 (gosec)
		poolConfig.MaxConns = int32(config.MaxConnections)
		                           ^
GolandProjects/codechunking/internal/adapter/outbound/repository/connection.go:78:30: G115: integer overflow conversion int -> int32 (gosec)
		poolConfig.MinConns = int32(config.MinConnections)
		                           ^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:399:23: G115: integer overflow conversion uint64 -> int64 (gosec)
				currentMB := int64(m.Alloc / 1024 / 1024)
				                  ^
GolandProjects/codechunking/cmd/api.go:415:5: shadow: declaration of "err" shadows declaration at line 405 (govet)
	if err := server.Start(startCtx); err != nil {
	   ^
GolandProjects/codechunking/cmd/api_current_behavior_test.go:15:2: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
	cfg := &config.Config{
	^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:47:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := &config.Config{
			^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:123:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := &config.Config{
			^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:205:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := createTestConfig(t)
			^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:283:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := createTestConfig(t)
			^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:422:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := config.New(v)
			^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:481:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := createTestConfig(t)
			^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:21:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:56:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:88:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:128:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:181:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:231:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:269:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:313:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:358:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:396:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:428:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:465:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:500:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:530:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:552:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:595:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{}
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:612:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{}
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:624:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{}
		^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:645:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{}
		^
GolandProjects/codechunking/cmd/api_test.go:70:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := tt.setupFunc(t)
			^
GolandProjects/codechunking/cmd/api_test.go:177:4: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
			cfg := createDefaultTestConfig()
			^
GolandProjects/codechunking/cmd/api_test.go:220:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg, err := LoadAPIConfiguration()
		^
GolandProjects/codechunking/cmd/api_test.go:273:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg, err := LoadAPIConfigurationFromFile(tmpFile.Name())
		^
GolandProjects/codechunking/cmd/api_test.go:643:2: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
	cfg := &config.Config{}
	^
GolandProjects/codechunking/cmd/api_test.go:672:2: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
	cfg := &config.Config{}
	^
GolandProjects/codechunking/cmd/api_test.go:897:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_test.go:928:3: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
		cfg := &config.Config{
		^
GolandProjects/codechunking/cmd/api_test.go:952:10: shadow: declaration of "err" shadows declaration at line 940 (govet)
			resp, err := http.Get(baseURL + endpoint)
			      ^
GolandProjects/codechunking/cmd/build_dependencies_test.go:20:2: shadow: declaration of "cfg" shadows declaration at line 15 (govet)
	cfg := &config.Config{
	^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler.go:45:5: shadow: declaration of "err" shadows declaration at line 30 (govet)
	if err := WriteJSON(w, statusCode, response); err != nil {
	   ^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler.go:64:19: shadow: declaration of "ok" shadows declaration at line 63 (govet)
			if natsHealth, ok := natsDetails.(dto.NATSHealthDetails); ok {
			               ^
GolandProjects/codechunking/internal/adapter/inbound/api/repository_handler.go:109:5: shadow: declaration of "err" shadows declaration at line 102 (govet)
	if err := h.validateIndexingJobListQuery(query); err != nil {
	   ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:637:5: shadow: declaration of "err" shadows declaration at line 612 (govet)
				err := registry.RegisterRoute(tt.conflictingPattern, handler)
				^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:138:6: shadow: declaration of "err" shadows declaration at line 124 (govet)
		if err := sm.validateJSONContent(body); err != nil {
		   ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:222:6: shadow: declaration of "err" shadows declaration at line 206 (govet)
		if err := s.httpServer.Serve(listener); err != nil && err != http.ErrServerClosed {
		   ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:233:6: shadow: declaration of "err" shadows declaration at line 206 (govet)
		if err := listener.Close(); err != nil {
		   ^
GolandProjects/codechunking/internal/adapter/inbound/api/server_test.go:211:8: shadow: declaration of "err" shadows declaration at line 192 (govet)
				if err := server.Shutdown(shutdownCtx); err != nil {
				   ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:171:17: shadow: declaration of "ok" shadows declaration at line 169 (govet)
				if details, ok := natsDetails.(dto.NATSHealthDetails); ok {
				            ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:360:40: unusedwrite: unused write to field findAllResult (govet)
		_ = &mockRepositoryRepo{findAllResult: nil}
		                                     ^
GolandProjects/codechunking/internal/application/common/errors_test.go:436:9: nilness: impossible condition: nil != nil (govet)
	if err != nil {
	       ^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:123:4: shadow: declaration of "err" shadows declaration at line 115 (govet)
			err := ValidateRepositoryStatus(status)
			^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:84:5: shadow: declaration of "err" shadows declaration at line 78 (govet)
	if err := uv.validateURLStructure(rawURL, parsedURL); err != nil {
	   ^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:21:6: identical: interface 'ApplicationLogger' contains identical methods or type constraints with another interface, causing redundancy (see: MetricsApplicationLogger, NATSApplicationLogger) (iface)
type ApplicationLogger interface {
     ^
GolandProjects/codechunking/internal/application/common/logging/metrics_integration.go:101:6: identical: interface 'MetricsApplicationLogger' contains identical methods or type constraints with another interface, causing redundancy (see: ApplicationLogger, NATSApplicationLogger) (iface)
type MetricsApplicationLogger interface {
     ^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:85:6: identical: interface 'NATSApplicationLogger' contains identical methods or type constraints with another interface, causing redundancy (see: ApplicationLogger, MetricsApplicationLogger) (iface)
type NATSApplicationLogger interface {
     ^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:484:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numRequests; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:495:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numRequests; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:500:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numRequests; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:296:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < numGoroutines; i++ {
	^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:301:4: for loop can be changed to use an integer range (Go 1.22+) (intrange)
			for j := 0; j < numCallsPerGoroutine; j++ {
			^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:354:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numCalls; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:396:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < rapidCalls; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:425:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < 1000; i++ {
	^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:541:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:566:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:267:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 1000; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:305:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < iterations; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:337:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numGoroutines; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:341:5: for loop can be changed to use an integer range (Go 1.22+) (intrange)
				for j := 0; j < iterationsPerGoroutine; j++ {
				^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:353:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numGoroutines; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:383:4: for loop can be changed to use an integer range (Go 1.22+) (intrange)
			for i := 0; i < 100; i++ {
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:538:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 100; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:607:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 100; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/security_integration_test.go:338:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 20; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/api/security_validation_middleware_test.go:388:4: for loop can be changed to use an integer range (Go 1.22+) (intrange)
			for i := 0; i < tt.requestCount; i++ {
			^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:349:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numGoroutines; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:357:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numGoroutines; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:362:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numGoroutines; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:44:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numCalls; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:145:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numGoroutines; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:152:5: for loop can be changed to use an integer range (Go 1.22+) (intrange)
				for j := 0; j < callsPerGoroutine; j++ {
				^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:173:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numGoroutines; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:174:4: for loop can be changed to use an integer range (Go 1.22+) (intrange)
			for j := 0; j < callsPerGoroutine; j++ {
			^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:203:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numReaders; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:208:5: for loop can be changed to use an integer range (Go 1.22+) (intrange)
				for j := 0; j < numReads; j++ {
				^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:271:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numConcurrentRequests; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:333:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < numResponses; i++ {
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:489:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < maxConcurrency; i++ {
		^
GolandProjects/codechunking/internal/application/common/input_sanitization_fuzz_test.go:315:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/application/common/input_sanitization_test.go:414:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/domain/entity/domain_error_test.go:270:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < 5; i++ {
	^
GolandProjects/codechunking/internal/domain/entity/domain_error_test.go:333:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 10; i++ {
		^
GolandProjects/codechunking/internal/domain/entity/domain_error_test.go:335:5: for loop can be changed to use an integer range (Go 1.22+) (intrange)
				for j := 0; j < 100; j++ {
				^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_fuzz_test.go:231:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_fuzz_test.go:251:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:48:4: for loop can be changed to use an integer range (Go 1.22+) (intrange)
			for i := 0; i < 1000; i++ {
			^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:55:4: for loop can be changed to use an integer range (Go 1.22+) (intrange)
			for i := 0; i < 1000; i++ {
			^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:62:4: for loop can be changed to use an integer range (Go 1.22+) (intrange)
			for i := 0; i < 1000; i++ {
			^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:104:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 100; i++ {
		^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:136:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 100; i++ {
		^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:164:3: for loop can be changed to use an integer range (Go 1.22+) (intrange)
		for i := 0; i < 100; i++ {
		^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:183:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:200:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:214:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:227:2: for loop can be changed to use an integer range (Go 1.22+) (intrange)
	for i := 0; i < b.N; i++ {
	^
GolandProjects/codechunking/cmd/api.go:412:69: Magic number: 10, in <argument> detected (mnd)
	startCtx, startCancel := context.WithTimeout(context.Background(), 10*time.Second)
	                                                                   ^
GolandProjects/codechunking/cmd/api.go:441:75: Magic number: 30, in <argument> detected (mnd)
	shutdownCtx, shutdownCancel := context.WithTimeout(context.Background(), 30*time.Second)
	                                                                         ^
GolandProjects/codechunking/cmd/root.go:144:37: Magic number: 5, in <argument> detected (mnd)
	v.SetDefault("worker.concurrency", 5)
	                                   ^
GolandProjects/codechunking/cmd/root.go:150:32: Magic number: 5432, in <argument> detected (mnd)
	v.SetDefault("database.port", 5432)
	                              ^
GolandProjects/codechunking/cmd/root.go:153:43: Magic number: 25, in <argument> detected (mnd)
	v.SetDefault("database.max_connections", 25)
	                                         ^
GolandProjects/codechunking/cmd/root.go:154:48: Magic number: 5, in <argument> detected (mnd)
	v.SetDefault("database.max_idle_connections", 5)
	                                              ^
GolandProjects/codechunking/cmd/root.go:158:38: Magic number: 5, in <argument> detected (mnd)
	v.SetDefault("nats.max_reconnects", 5)
	                                    ^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler.go:59:98: Magic number: 1e6, in <argument> detected (mnd)
	w.Header().Set("X-Health-Check-Duration", fmt.Sprintf("%.2fms", float64(duration.Nanoseconds())/1e6))
	                                                                                                ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:273:28: Magic number: 30, in <argument> detected (mnd)
		ticker := time.NewTicker(30 * time.Second)
		                         ^
GolandProjects/codechunking/internal/adapter/inbound/api/repository_handler.go:173:24: Magic number: 2048, in <condition> detected (mnd)
	if len(request.URL) > 2048 {
	                      ^
GolandProjects/codechunking/internal/adapter/inbound/api/repository_handler.go:182:63: Magic number: 100, in <argument> detected (mnd)
	return h.validatePaginationParams(query.Limit, query.Offset, 100)
	                                                             ^
GolandProjects/codechunking/internal/adapter/inbound/api/repository_handler.go:187:63: Magic number: 50, in <argument> detected (mnd)
	return h.validatePaginationParams(query.Limit, query.Offset, 50)
	                                                             ^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util.go:23:42: Magic number: 512, in <argument> detected (mnd)
		buf := bytes.NewBuffer(make([]byte, 0, 512))
		                                       ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:177:40: Magic number: 2, in <argument> detected (mnd)
	parts := strings.SplitN(pattern, " ", 2)
	                                      ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:178:19: Magic number: 2, in <condition> detected (mnd)
	if len(parts) != 2 {
	                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:278:46: Magic number: 2, in <argument> detected (mnd)
	newParts := strings.SplitN(newPattern, " ", 2)
	                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:279:22: Magic number: 2, in <condition> detected (mnd)
	if len(newParts) != 2 {
	                    ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:287:57: Magic number: 2, in <argument> detected (mnd)
		existingParts := strings.SplitN(existingPattern, " ", 2)
		                                                      ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes.go:288:28: Magic number: 2, in <condition> detected (mnd)
		if len(existingParts) != 2 {
		                         ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:314:23: Magic number: 10, in <assign> detected (mnd)
			RequestsPerMinute: 10,
			                   ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:315:23: Magic number: 5, in <assign> detected (mnd)
			BurstSize:         5,
			                   ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/helpers.go:334:14: Magic number: 20, in <assign> detected (mnd)
				Limit:   20,
				         ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/helpers.go:362:14: Magic number: 10, in <assign> detected (mnd)
				Limit:   10,
				         ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:229:21: Magic number: 1000, in <assign> detected (mnd)
				PublishedCount: 1000,
				                ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:369:22: Magic number: 5000, in <argument> detected (mnd)
		WithMessageMetrics(5000, 10, "1.8ms").
		                   ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:371:33: Magic number: 150, in <argument> detected (mnd)
		WithClusterInfo("production", 150).
		                              ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:386:18: Magic number: 15, in <argument> detected (mnd)
		WithReconnects(15).
		               ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:390:22: Magic number: 1000, in <argument> detected (mnd)
		WithMessageMetrics(1000, 250, "0ms").
		                   ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:405:18: Magic number: 8, in <argument> detected (mnd)
		WithReconnects(8).
		               ^
GolandProjects/codechunking/internal/adapter/inbound/api/testutil/nats_health_mocks.go:409:22: Magic number: 2500, in <argument> detected (mnd)
		WithMessageMetrics(2500, 125, "12ms").
		                   ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:189:18: Magic number: 50, in <argument> detected (mnd)
						time.Sleep(50 * time.Microsecond)
						           ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:196:72: Magic number: 1e6, in <argument> detected (mnd)
		responseTime := fmt.Sprintf("%.1fms", float64(elapsed.Nanoseconds())/1e6)
		                                                                     ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:424:31: Magic number: 10, in <condition> detected (mnd)
	if healthStatus.Reconnects > 10 {
	                             ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:466:31: Magic number: 10, in <condition> detected (mnd)
	if healthStatus.Reconnects > 10 {
	                             ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:536:28: Magic number: 100, in <condition> detected (mnd)
		if metrics.FailedCount < 100 {
		                         ^
GolandProjects/codechunking/internal/application/common/converter.go:61:19: Magic number: 2, in <condition> detected (mnd)
	if len(parts) >= 2 {
	                 ^
GolandProjects/codechunking/internal/application/common/security/config.go:55:17: Magic number: 2048, in <assign> detected (mnd)
		MaxURLLength: 2048,
		              ^
GolandProjects/codechunking/internal/application/common/security/config.go:56:17: Magic number: 64, in <assign> detected (mnd)
		MaxBodySize:  64 * 1024, // 64KB
		              ^
GolandProjects/codechunking/internal/application/common/security/config.go:59:23: Magic number: 60, in <assign> detected (mnd)
			RequestsPerMinute: 60,
			                   ^
GolandProjects/codechunking/internal/application/common/security/config.go:60:23: Magic number: 10, in <assign> detected (mnd)
			BurstSize:         10,
			                   ^
GolandProjects/codechunking/internal/application/common/security/config.go:75:26: Magic number: 1000, in <assign> detected (mnd)
		CacheSize:             1000,
		                       ^
GolandProjects/codechunking/internal/application/common/security/config.go:76:26: Magic number: 5, in <assign> detected (mnd)
		CacheTTL:              5 * time.Minute,
		                       ^
GolandProjects/codechunking/internal/application/common/security/config.go:105:19: Magic number: 64, in <operation> detected (mnd)
		c.MaxBodySize = 64 * 1024
		                ^
GolandProjects/codechunking/internal/application/common/security/config.go:125:16: Magic number: 5, in <operation> detected (mnd)
		c.CacheTTL = 5 * time.Minute
		             ^
GolandProjects/codechunking/internal/application/common/validation.go:37:18: Magic number: 255, in <condition> detected (mnd)
	if len(*name) > 255 {
	                ^
GolandProjects/codechunking/internal/application/common/validation.go:317:12: Magic number: 127, in <condition> detected (mnd)
				if r > 127 {
				       ^
GolandProjects/codechunking/internal/application/dto/indexing_job.go:39:11: Magic number: 10, in <assign> detected (mnd)
		Limit:  10,
		        ^
GolandProjects/codechunking/internal/application/dto/repository.go:50:11: Magic number: 20, in <assign> detected (mnd)
		Limit:  20,
		        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:231:22: Magic number: 2, in <condition> detected (mnd)
	if len(pathParts) < 2 {
	                    ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:310:23: Magic number: 2, in <condition> detected (mnd)
	if len(pathParts) >= 2 {
	                     ^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler.go:62:1: `if exists` has complex nested blocks (complexity: 9) (nestif)
	if natsStatus, exists := response.Dependencies["nats"]; exists {
^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:69:1: `if len(violations) > 0` has complex nested blocks (complexity: 6) (nestif)
		if len(violations) > 0 {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:99:1: `if h.messagePublisher != nil` has complex nested blocks (complexity: 6) (nestif)
	if h.messagePublisher != nil {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter.go:168:1: `if status.Details != nil` has complex nested blocks (complexity: 9) (nestif)
		if status.Details != nil {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/connection_test.go:86:1: `if tt.expectError` has complex nested blocks (complexity: 6) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:130:1: `if tt.expectError` has complex nested blocks (complexity: 20) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:322:1: `if tt.expectError` has complex nested blocks (complexity: 10) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:455:1: `if tt.expectError` has complex nested blocks (complexity: 14) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:187:1: `if filters.Sort != ""` has complex nested blocks (complexity: 7) (nestif)
	if filters.Sort != "" {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:188:1: `if tt.expectError` has complex nested blocks (complexity: 20) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:266:1: `if tt.expectError` has complex nested blocks (complexity: 17) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:462:1: `if tt.expectError` has complex nested blocks (complexity: 15) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository_test.go:593:1: `if tt.expectError` has complex nested blocks (complexity: 19) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:466:1: `if l.config.Output == "buffer"` has complex nested blocks (complexity: 6) (nestif)
	if l.config.Output == "buffer" {
^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:574:1: `if l.config.Output == "buffer" && l.buffer != nil` has complex nested blocks (complexity: 9) (nestif)
	if l.config.Output == "buffer" && l.buffer != nil {
^
GolandProjects/codechunking/internal/application/common/logging/application_logger.go:779:1: `if ok && appLogger.buffer != nil` has complex nested blocks (complexity: 14) (nestif)
	if appLogger, ok := logger.(*applicationLoggerImpl); ok && appLogger.buffer != nil {
^
GolandProjects/codechunking/internal/application/common/logging/metrics_integration.go:297:1: `if ok` has complex nested blocks (complexity: 5) (nestif)
	if appLogger, ok := m.ApplicationLogger.(*applicationLoggerImpl); ok {
^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:127:1: `if ok` has complex nested blocks (complexity: 7) (nestif)
	if appLogger, ok := n.ApplicationLogger.(*applicationLoggerImpl); ok {
^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:321:1: `if ok` has complex nested blocks (complexity: 6) (nestif)
	if appLogger, ok := n.ApplicationLogger.(*applicationLoggerImpl); ok {
^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:53:1: `if domainErr != nil && appErr != nil` has complex nested blocks (complexity: 6) (nestif)
				if domainErr != nil && appErr != nil {
^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:149:1: `if tt.expectError` has complex nested blocks (complexity: 5) (nestif)
			if tt.expectError {
^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:196:1: `if !isSQLInjection(status)` has complex nested blocks (complexity: 13) (nestif)
			if !isSQLInjection(status) {
^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:131:1: `if err == nil` has complex nested blocks (complexity: 5) (nestif)
		if err == nil {
^
GolandProjects/codechunking/internal/application/common/validation_test.go:124:1: `if tt.wantErr` has complex nested blocks (complexity: 6) (nestif)
			if tt.wantErr {
^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_fuzz_test.go:162:1: `if err1 == nil && err2 == nil` has complex nested blocks (complexity: 12) (nestif)
		if err1 == nil && err2 == nil {
^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:385:2: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
	return nil, nil
	^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:389:2: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
	return nil, nil
	^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:416:2: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
	return nil, nil
	^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:426:2: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
	return nil, nil
	^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository.go:95:4: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
			return nil, nil
			^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:120:4: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
			return nil, nil
			^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:444:4: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
			return nil, nil // Not found, return nil without error
			^
GolandProjects/codechunking/internal/adapter/outbound/repository/repository_repository.go:486:4: return both a `nil` error and an invalid value: use a sentinel error instead (nilnil)
			return nil, nil // Not found
			^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:206:29: net.Listen must not be called. use (*net.ListenConfig).Listen (noctx)
	listener, err := net.Listen("tcp", s.httpServer.Addr)
	                           ^
GolandProjects/codechunking/internal/domain/valueobject/repository_status.go:108:1: named return "isEmpty" with type "bool" found (nonamedreturns)
func checkRepositoryStatusValidity(status string) (isEmpty bool, isValidStatus bool) {
^
GolandProjects/codechunking/cmd/api_test.go:430:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid configuration: missing required config")
		       ^
GolandProjects/codechunking/cmd/api_test.go:557:16: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
			return nil, fmt.Errorf("address already in use")
			            ^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:504:13: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return 0, fmt.Errorf("simulated write failure")
		          ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:99:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("malicious SQL detected")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:110:12: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
				return fmt.Errorf("security violation detected")
				       ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:114:12: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
				return fmt.Errorf("header injection detected")
				       ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:126:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("malformed request")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:132:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("payload too large")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware.go:150:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("malformed JSON")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:108:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("config is required")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:111:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("health service is required")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:114:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("repository service is required")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:117:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("error handler is required")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:202:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("server is already running")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:334:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("config cannot be nil")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:340:11: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
			return fmt.Errorf("invalid port")
			       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:346:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid timeout")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:349:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid timeout")
		       ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:71:15: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return nil, fmt.Errorf("NATS URL cannot be empty")
		            ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:74:15: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return nil, fmt.Errorf("invalid NATS URL scheme")
		            ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:77:15: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return nil, fmt.Errorf("max reconnects cannot be negative")
		            ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:80:15: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return nil, fmt.Errorf("reconnect wait cannot be negative")
		            ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:104:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("repository ID cannot be nil")
		       ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:107:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("repository URL cannot be empty")
		       ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:113:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid repository URL format")
		       ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:118:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid repository URL format")
		       ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:123:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("unsupported URL scheme")
		       ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:127:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("repository URL must end with .git")
		       ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/nats_message_publisher.go:133:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("circuit breaker open: too many recent failures")
		       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:49:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("SQL comment pattern detected in URL")
		       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:56:11: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
			return fmt.Errorf("SQL injection pattern detected in URL")
			       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:69:11: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
			return fmt.Errorf("path traversal pattern detected")
			       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:75:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("URL-encoded path traversal detected")
		       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:85:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid host format: @ symbol not allowed")
		       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:95:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid encoding detected")
		       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:110:11: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
			return fmt.Errorf("invalid encoding detected")
			       ^
GolandProjects/codechunking/internal/application/common/security/url_validator.go:116:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid encoding detected")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_status.go:185:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid repository status: empty string not allowed")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:53:27: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return RepositoryURL{}, fmt.Errorf("repository URL cannot be empty")
		                        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:121:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("URL contains invalid control characters")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:126:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("path traversal detected")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:131:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("suspicious unicode detected")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:136:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid characters detected")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:141:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("invalid characters detected")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:163:11: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
			return fmt.Errorf("dangerous URL-encoded control character detected")
			       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:181:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("script tag detected in URL")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:188:11: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
			return fmt.Errorf("dangerous event handler detected in URL")
			       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:212:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("non-standard port not allowed")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:232:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("repository URL must include owner and repository name")
		       ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url.go:361:10: error-format: fmt.Errorf can be replaced with errors.New (perfsprint)
		return fmt.Errorf("URL must use http or https scheme")
		       ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:143:36: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func startRealE2ETestServerMinimal(t *testing.T) {
                                   ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:161:50: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyCompleteRepositoryCreationFlowMinimal(t *testing.T) {
                                                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:165:51: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyCompleteRepositoryRetrievalFlowMinimal(t *testing.T) {
                                                  ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:169:49: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyCompleteRepositoryListingFlowMinimal(t *testing.T) {
                                                ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:173:46: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyCompleteRepositoryJobsFlowMinimal(t *testing.T) {
                                             ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:177:45: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyCompleteErrorHandlingFlowMinimal(t *testing.T) {
                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:181:45: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyDatabaseMigrationsAppliedMinimal(t *testing.T) {
                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:185:43: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyDatabaseSchemaIntegrityMinimal(t *testing.T) {
                                          ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:189:35: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyDatabaseIndexesMinimal(t *testing.T) {
                                  ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:193:39: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyDatabaseConstraintsMinimal(t *testing.T) {
                                      ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:197:42: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)
func verifyNATSServerConnectivityMinimal(t *testing.T) {
                                         ^
GolandProjects/codechunking/internal/adapter/inbound/api/error_handler.go:27:76: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
func (h *DefaultErrorHandler) HandleValidationError(w http.ResponseWriter, r *http.Request, err error) {
                                                                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/error_handler.go:51:73: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
func (h *DefaultErrorHandler) HandleServiceError(w http.ResponseWriter, r *http.Request, err error) {
                                                                        ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:133:57: unused-parameter: parameter 'repo' seems to be unused, consider removing or renaming it as _ (revive)
			setupMocks: func(health *testutil.MockHealthService, repo *testutil.MockRepositoryService) {
			                                                     ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:146:21: unused-parameter: parameter 'health' seems to be unused, consider removing or renaming it as _ (revive)
			setupMocks: func(health *testutil.MockHealthService, repo *testutil.MockRepositoryService) {
			                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:156:21: unused-parameter: parameter 'health' seems to be unused, consider removing or renaming it as _ (revive)
			setupMocks: func(health *testutil.MockHealthService, repo *testutil.MockRepositoryService) {
			                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:166:21: unused-parameter: parameter 'health' seems to be unused, consider removing or renaming it as _ (revive)
			setupMocks: func(health *testutil.MockHealthService, repo *testutil.MockRepositoryService) {
			                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:176:21: unused-parameter: parameter 'health' seems to be unused, consider removing or renaming it as _ (revive)
			setupMocks: func(health *testutil.MockHealthService, repo *testutil.MockRepositoryService) {
			                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:185:21: unused-parameter: parameter 'health' seems to be unused, consider removing or renaming it as _ (revive)
			setupMocks: func(health *testutil.MockHealthService, repo *testutil.MockRepositoryService) {
			                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:195:21: unused-parameter: parameter 'health' seems to be unused, consider removing or renaming it as _ (revive)
			setupMocks: func(health *testutil.MockHealthService, repo *testutil.MockRepositoryService) {
			                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:426:59: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
		handler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		                                                        ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:434:70: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
		conflictingHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		                                                                   ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:475:37: unused-parameter: parameter 'w' seems to be unused, consider removing or renaming it as _ (revive)
			handler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {})
			                                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:492:36: unused-parameter: parameter 'w' seems to be unused, consider removing or renaming it as _ (revive)
		handler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {})
		                                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:554:36: unused-parameter: parameter 'w' seems to be unused, consider removing or renaming it as _ (revive)
		handler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {})
		                                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:609:36: unused-parameter: parameter 'w' seems to be unused, consider removing or renaming it as _ (revive)
		handler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {})
		                                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:700:38: unused-parameter: parameter 'w' seems to be unused, consider removing or renaming it as _ (revive)
				handler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {})
				                                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:728:36: unused-parameter: parameter 'w' seems to be unused, consider removing or renaming it as _ (revive)
		handler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {})
		                                 ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:472:65: unused-parameter: parameter 'w' seems to be unused, consider removing or renaming it as _ (revive)
			err := registry.RegisterRoute(pattern, http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {}))
			                                                             ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_validation_middleware_test.go:227:79: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			handler := securityMiddleware(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_validation_middleware_test.go:320:83: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			handler := sanitizationMiddleware(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                                               ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_validation_middleware_test.go:381:80: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			handler := rateLimitMiddleware(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_validation_middleware_test.go:457:82: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			handler := contentTypeMiddleware(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                                              ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_validation_middleware_test.go:483:78: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
		handler := securityMiddleware(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		                                                                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:67:64: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:133:64: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:183:64: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:288:64: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:342:64: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:364:63: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
		nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:403:63: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
		nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:464:64: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:532:64: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
			nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:559:63: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
		nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:593:63: unused-parameter: parameter 'r' seems to be unused, consider removing or renaming it as _ (revive)
		nextHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		                                                            ^
GolandProjects/codechunking/internal/application/common/validation.go:1:9: var-naming: avoid meaningless package names (revive)
package common
        ^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:11:6: var-naming: don't use underscores in Go names; func TestValidateRepositoryStatus_MapMustBeRemoved should be TestValidateRepositoryStatusMapMustBeRemoved (revive)
func TestValidateRepositoryStatus_MapMustBeRemoved(t *testing.T) {
     ^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:35:6: var-naming: don't use underscores in Go names; func TestValidateRepositoryStatus_DomainLayerMustBeUsed should be TestValidateRepositoryStatusDomainLayerMustBeUsed (revive)
func TestValidateRepositoryStatus_DomainLayerMustBeUsed(t *testing.T) {
     ^
GolandProjects/codechunking/internal/application/common/validation_refactoring_failing_tests.go:158:6: var-naming: don't use underscores in Go names; func TestValidateRepositoryStatus_CurrentImplementationProblems should be TestValidateRepositoryStatusCurrentImplementationProblems (revive)
func TestValidateRepositoryStatus_CurrentImplementationProblems(t *testing.T) {
     ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_fuzz_test.go:111:59: unused-parameter: parameter 'originalInput' seems to be unused, consider removing or renaming it as _ (revive)
func validateAcceptedURL(t *testing.T, url RepositoryURL, originalInput string) {
                                                          ^
GolandProjects/codechunking/cmd/api.go:205:3: global logger should not be used (sloglint)
		slog.Error("Failed to create database connection, using mock health service", "error", err)
		^
GolandProjects/codechunking/cmd/api.go:229:3: global logger should not be used (sloglint)
		slog.Error("Failed to create database connection", "error", err)
		^
GolandProjects/codechunking/cmd/api.go:407:3: global logger should not be used (sloglint)
		slog.Error("Failed to create server", "error", err)
		^
GolandProjects/codechunking/cmd/api.go:416:3: global logger should not be used (sloglint)
		slog.Error("Failed to start server", "error", err)
		^
GolandProjects/codechunking/cmd/api.go:420:2: global logger should not be used (sloglint)
	slog.Info("API server started successfully", "address", server.Address())
	^
GolandProjects/codechunking/cmd/api.go:421:2: global logger should not be used (sloglint)
	slog.Info("Server configuration", "host", server.Host(), "port", server.Port())
	^
GolandProjects/codechunking/cmd/api.go:422:2: global logger should not be used (sloglint)
	slog.Info("Middleware enabled", "count", server.MiddlewareCount())
	^
GolandProjects/codechunking/cmd/api.go:438:2: global logger should not be used (sloglint)
	slog.Info("Received signal. Initiating graceful shutdown", "signal", sig)
	^
GolandProjects/codechunking/cmd/api.go:446:3: global logger should not be used (sloglint)
		slog.Error("Error during server shutdown", "error", err)
		^
GolandProjects/codechunking/cmd/api.go:450:2: global logger should not be used (sloglint)
	slog.Info("API server shut down gracefully")
	^
GolandProjects/codechunking/internal/adapter/outbound/mock/message_publisher.go:34:2: global logger should not be used (sloglint)
	slog.Info("Mock: Publishing indexing job", "repository_url", repositoryURL, "repository_id", repositoryID)
	^
GolandProjects/codechunking/internal/application/common/logging/metrics_integration.go:328:5: InfoContext should be used instead (sloglint)
				appLogger.logger.Info(string(jsonData))
				^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:173:5: InfoContext should be used instead (sloglint)
				appLogger.logger.Info(string(jsonData))
				^
GolandProjects/codechunking/internal/application/common/logging/nats_logger.go:357:5: InfoContext should be used instead (sloglint)
				appLogger.logger.Info(string(jsonData))
				^
GolandProjects/codechunking/internal/application/common/security/logger.go:102:3: global logger should not be used (sloglint)
		slog.Error("Security violation",
		^
GolandProjects/codechunking/internal/application/common/security/logger.go:111:3: global logger should not be used (sloglint)
		slog.Warn("Security violation",
		^
GolandProjects/codechunking/internal/application/common/security/logger.go:121:4: global logger should not be used (sloglint)
			slog.Info("Security violation",
			^
GolandProjects/codechunking/internal/application/common/security/logger.go:131:3: global logger should not be used (sloglint)
		slog.Info("Security event",
		^
GolandProjects/codechunking/internal/application/common/security/logger.go:155:3: global logger should not be used (sloglint)
		slog.Debug("Security metric",
		^
GolandProjects/codechunking/internal/application/common/security/logger.go:171:3: global logger should not be used (sloglint)
		slog.Warn("Access blocked",
		^
GolandProjects/codechunking/internal/application/common/security/logger.go:179:3: global logger should not be used (sloglint)
		slog.Error("Access failed",
		^
GolandProjects/codechunking/internal/application/common/security/logger.go:188:4: global logger should not be used (sloglint)
			slog.Debug("Access successful",
			^
GolandProjects/codechunking/internal/application/service/repository_service.go:388:3: InfoContext should be used instead (sloglint)
		s.logger.Info("Batch duplicate check called with empty URL list")
		^
GolandProjects/codechunking/internal/application/service/repository_service.go:394:2: InfoContext should be used instead (sloglint)
	s.logger.Info("Starting batch duplicate detection",
	^
GolandProjects/codechunking/internal/application/service/repository_service.go:445:2: InfoContext should be used instead (sloglint)
	s.logger.Info("Batch duplicate detection completed",
	^
GolandProjects/codechunking/internal/application/service/repository_service.go:488:3: WarnContext should be used instead (sloglint)
		s.logger.Warn("URL validation failed",
		^
GolandProjects/codechunking/internal/application/service/repository_service.go:504:3: ErrorContext should be used instead (sloglint)
		s.logger.Error("Duplicate check failed",
		^
GolandProjects/codechunking/internal/application/service/repository_service.go:525:4: ErrorContext should be used instead (sloglint)
			s.logger.Error("Failed to fetch existing repository details",
			^
GolandProjects/codechunking/internal/application/service/repository_service.go:539:3: InfoContext should be used instead (sloglint)
		s.logger.Info("Duplicate repository detected",
		^
GolandProjects/codechunking/internal/application/service/repository_service.go:545:3: DebugContext should be used instead (sloglint)
		s.logger.Debug("No duplicate found",
		^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:492:5: require-error: for error assertions use require (testifylint)
				assert.Error(t, err, tt.errorMessage)
				^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:495:5: require-error: for error assertions use require (testifylint)
				assert.NoError(t, err, tt.description)
				^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:523:2: formatter: remove unnecessary fmt.Sprintf (testifylint)
	assert.Equal(t, *expected, *actual, fmt.Sprintf("%s values should match", fieldName))
	^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:214:4: require-error: for error assertions use require (testifylint)
			assert.NoError(t, errors[i], "Concurrent call %d should succeed", i)
			^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:491:3: require-error: for error assertions use require (testifylint)
		assert.NoError(t, err, "ServiceFactory.Close() should succeed")
		^
GolandProjects/codechunking/cmd/api_test.go:150:5: require-error: for error assertions use require (testifylint)
				assert.NoError(t, err, "Server should shut down gracefully")
				^
GolandProjects/codechunking/cmd/api_test.go:349:4: require-error: for error assertions use require (testifylint)
			assert.Error(t, err)
			^
GolandProjects/codechunking/cmd/build_dependencies_test.go:74:2: require-error: for error assertions use require (testifylint)
	assert.Error(t, err, "buildDependencies should return error when database connection fails")
	^
GolandProjects/codechunking/cmd/build_dependencies_test.go:166:4: require-error: for error assertions use require (testifylint)
			assert.Error(t, err, "buildDependencies should return error for invalid database config")
			^
GolandProjects/codechunking/internal/adapter/inbound/api/error_handler_test.go:234:3: useless-assert: asserting of the same variable (testifylint)
		assert.WithinDuration(t, response.Timestamp, response.Timestamp, 0) // Just check it's not zero
		^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:108:5: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
				assert.Equal(t, float64(2), reconnects)
				^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:128:5: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
				assert.Equal(t, float64(15674), publishedCount)
				^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:132:5: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
				assert.Equal(t, float64(8), failedCount)
				^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:208:5: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
				assert.Equal(t, float64(500), metrics["failed_count"].(float64))
				^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:261:5: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
				assert.Equal(t, float64(8), natsHealthMap["reconnects"].(float64))
				^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:425:3: compares: use assert.Less (testifylint)
		assert.True(t, duration < 100*time.Millisecond,
		^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:441:3: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
		assert.Equal(t, float64(500), serverInfo["connections"].(float64))
		^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:514:4: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
			assert.Equal(t, float64(3), natsHealthMap["reconnects"].(float64))
			^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_test.go:371:3: empty: use assert.Empty (testifylint)
		assert.Len(t, mockErrorHandler.HandleServiceErrorCalls, 0)
		^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_test.go:372:3: empty: use assert.Empty (testifylint)
		assert.Len(t, mockErrorHandler.HandleValidationErrorCalls, 0)
		^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:133:5: encoded-compare: use assert.JSONEq (testifylint)
				assert.Equal(t, expectedJSON, bodyBytes)
				^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:145:5: empty: use assert.Empty (testifylint)
				assert.Len(t, decoded, 0)
				^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:324:7: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
						assert.Equal(t, float64(goroutineID), response["goroutine_id"]) // JSON numbers are float64
						^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:325:7: float-compare: use assert.InEpsilon (or InDelta) (testifylint)
						assert.Equal(t, float64(j), response["call_number"])
						^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:481:3: empty: use assert.Empty (testifylint)
		assert.Equal(t, "", decoded)
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:98:6: contains: use assert.NotContains (testifylint)
					assert.False(t, strings.Contains(pattern, "{id:[0-9]+}"),
					^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:100:6: contains: use assert.NotContains (testifylint)
					assert.False(t, strings.Contains(pattern, "{id:.*}"),
					^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:439:3: require-error: for error assertions use require (testifylint)
		assert.Error(t, err)
		^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:126:4: len: use assert.Len (testifylint)
			assert.Equal(t, len(expectedMethods), len(v), "Package-level variable should contain exactly %d methods", len(expectedMethods))
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:139:4: len: use assert.Len (testifylint)
			assert.Equal(t, len(expectedMethods), len(v), "Package-level slice should contain exactly %d methods", len(expectedMethods))
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:179:4: require-error: for error assertions use require (testifylint)
			assert.NoError(t, err, "Method %s from package variable should be valid in pattern", method)
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:184:4: require-error: for error assertions use require (testifylint)
			assert.NoError(t, err, "Lowercase method %s should be valid", strings.ToLower(method))
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:240:5: require-error: for error assertions use require (testifylint)
				assert.Error(t, err, "Pattern %s should be rejected", tt.pattern)
				^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:389:4: len: use assert.Len (testifylint)
			assert.Equal(t, originalSize, len(validMethods), "Package-level map should not be modified")
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:473:4: require-error: for error assertions use require (testifylint)
			assert.NoError(t, err, "Should be able to register route with method %s", method)
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:573:5: len: use assert.Len (testifylint)
				assert.Equal(t, len(expectedMethods), len(v), "❌ Package variable must contain exactly expected methods")
				^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:592:4: require-error: for error assertions use require (testifylint)
			assert.NoError(t, err, "✅ Valid pattern %s should be accepted", pattern)
			^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:599:4: require-error: for error assertions use require (testifylint)
			assert.Error(t, err, "✅ Invalid pattern %s should be rejected", pattern)
			^
GolandProjects/codechunking/internal/adapter/inbound/api/security_integration_test.go:354:3: negative-positive: use assert.Positive (testifylint)
		assert.Greater(t, blockedCount, 0, "Rate limiting should block excessive requests")
		^
GolandProjects/codechunking/internal/adapter/inbound/api/server_test.go:421:3: negative-positive: use assert.Positive (testifylint)
		assert.Greater(t, middlewareCount, 0, "Server should have middleware registered")
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:117:5: empty: use assert.Empty (testifylint)
				assert.Equal(t, "", natsDetails.LastError)
				^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:297:3: negative-positive: use assert.Positive (testifylint)
		assert.True(t, duration.Milliseconds() > 0)
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:54:4: compares: use assert.Less (testifylint)
			assert.True(t, duration < 50*time.Millisecond,
			^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:60:3: compares: use assert.Less (testifylint)
		assert.True(t, avgDuration < 10*time.Millisecond,
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:85:3: compares: use assert.Less (testifylint)
		assert.True(t, duration < 150*time.Millisecond,
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:116:3: compares: use assert.Less (testifylint)
		assert.True(t, duration2 < duration1/2,
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:292:3: compares: use assert.Less (testifylint)
		assert.True(t, totalDuration < 2*time.Second,
		^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:446:3: compares: use assert.Less (testifylint)
		assert.True(t, serializationTime < 10*time.Millisecond,
		^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_test.go:135:5: require-error: for error assertions use require (testifylint)
				assert.Error(t, err, tt.description)
				^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_test.go:323:5: require-error: for error assertions use require (testifylint)
				assert.Error(t, err, tt.description)
				^
GolandProjects/codechunking/cmd/api_current_behavior_test.go:1:9: package should be `cmd_test` instead of `cmd` (testpackage)
package cmd
        ^
GolandProjects/codechunking/cmd/api_middleware_config_test.go:1:9: package should be `cmd_test` instead of `cmd` (testpackage)
package cmd
        ^
GolandProjects/codechunking/cmd/api_pool_memoization_test.go:1:9: package should be `cmd_test` instead of `cmd` (testpackage)
package cmd
        ^
GolandProjects/codechunking/cmd/api_test.go:1:9: package should be `cmd_test` instead of `cmd` (testpackage)
package cmd
        ^
GolandProjects/codechunking/cmd/build_dependencies_test.go:1:9: package should be `cmd_test` instead of `cmd` (testpackage)
package cmd
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/duplicate_detection_api_simple_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/end_to_end_integration_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/error_handler_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_nats_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/health_handler_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware_test.go:1:9: package should be `middleware_test` instead of `middleware` (testpackage)
package middleware
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/repository_handler_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/response_util_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/routes_valid_methods_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_integration_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_middleware_consistency_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/security_validation_middleware_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/server_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:1:9: package should be `api_test` instead of `api` (testpackage)
package api
        ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_adapter_nats_test.go:1:9: package should be `service_test` instead of `service` (testpackage)
package service
        ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_circuit_breaker_test.go:1:9: package should be `service_test` instead of `service` (testpackage)
package service
        ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_error_scenarios_test.go:1:9: package should be `service_test` instead of `service` (testpackage)
package service
        ^
GolandProjects/codechunking/internal/adapter/inbound/service/health_service_nats_performance_test.go:1:9: package should be `service_test` instead of `service` (testpackage)
package service
        ^
GolandProjects/codechunking/internal/adapter/outbound/messaging/integration_test.go:1:9: package should be `messaging_test` instead of `messaging` (testpackage)
package messaging
        ^
GolandProjects/codechunking/internal/adapter/outbound/repository/connection_test.go:1:9: package should be `repository_test` instead of `repository` (testpackage)
package repository
        ^
GolandProjects/codechunking/internal/adapter/outbound/repository/duplicate_detection_repository_test.go:1:9: package should be `repository_test` instead of `repository` (testpackage)
package repository
        ^
GolandProjects/codechunking/internal/adapter/outbound/repository/error_handling_test.go:1:9: package should be `repository_test` instead of `repository` (testpackage)
package repository
        ^
GolandProjects/codechunking/internal/adapter/outbound/repository/indexing_job_repository_test.go:1:9: package should be `repository_test` instead of `repository` (testpackage)
package repository
        ^
GolandProjects/codechunking/internal/adapter/outbound/repository/integration_test.go:1:9: package should be `repository_test` instead of `repository` (testpackage)
package repository
        ^
GolandProjects/codechunking/internal/adapter/outbound/repository/query_builder_helper_test.go:1:9: package should be `repository_test` instead of `repository` (testpackage)
package repository
        ^
GolandProjects/codechunking/internal/application/common/errors_test.go:1:9: package should be `common_test` instead of `common` (testpackage)
package common
        ^
GolandProjects/codechunking/internal/application/common/input_sanitization_fuzz_test.go:1:9: package should be `common_test` instead of `common` (testpackage)
package common
        ^
GolandProjects/codechunking/internal/application/common/input_sanitization_test.go:1:9: package should be `common_test` instead of `common` (testpackage)
package common
        ^
GolandProjects/codechunking/internal/application/common/sql_injection_prevention_test.go:1:9: package should be `common_test` instead of `common` (testpackage)
package common
        ^
GolandProjects/codechunking/internal/application/common/validation_domain_integration_test.go:1:9: package should be `common_test` instead of `common` (testpackage)
package common
        ^
GolandProjects/codechunking/internal/application/common/validation_refactored_test.go:1:9: package should be `common_test` instead of `common` (testpackage)
package common
        ^
GolandProjects/codechunking/internal/application/common/validation_test.go:1:9: package should be `common_test` instead of `common` (testpackage)
package common
        ^
GolandProjects/codechunking/internal/domain/entity/domain_error_test.go:1:9: package should be `entity_test` instead of `entity` (testpackage)
package entity
        ^
GolandProjects/codechunking/internal/domain/entity/repository_test.go:1:9: package should be `entity_test` instead of `entity` (testpackage)
package entity
        ^
GolandProjects/codechunking/internal/domain/valueobject/job_status_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_status_new_functions_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_status_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_fuzz_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_fuzz_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_performance_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_raw_normalized_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_test.go:1:9: package should be `valueobject_test` instead of `valueobject` (testpackage)
package valueobject
        ^
GolandProjects/codechunking/cmd/api_test.go:412:61: (*testServerSetup).createHTTPServer - result 1 (error) is always nil (unparam)
func (s *testServerSetup) createHTTPServer() (*http.Server, error) {
                                                            ^
GolandProjects/codechunking/internal/adapter/inbound/api/server.go:123:49: (*ServerBuilder).buildServer - result 1 (error) is always nil (unparam)
func (b *ServerBuilder) buildServer() (*Server, error) {
                                                ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:16:25: createHTTPSRequest - method always receives "GET" (unparam)
func createHTTPSRequest(method, path string) *http.Request {
                        ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:24:24: createHTTPRequest - method always receives "GET" (unparam)
func createHTTPRequest(method, path string) *http.Request {
                       ^
GolandProjects/codechunking/internal/adapter/inbound/api/unified_security_middleware_test.go:34:65: assertNoHeader - headerName always receives "Strict-Transport-Security" (unparam)
func assertNoHeader(t *testing.T, w *httptest.ResponseRecorder, headerName string) {
                                                                ^
GolandProjects/codechunking/internal/domain/valueobject/repository_url_normalization_test.go:400:27: generateLongRepoName - length always receives 100 (unparam)
func generateLongRepoName(length int) string {
                          ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware.go:547:17: "POST" can be replaced by http.MethodPost (usestdlibvars)
	if r.Method == "POST" || r.Method == "PUT" {
	               ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware_test.go:202:31: "GET" can be replaced by http.MethodGet (usestdlibvars)
			req := httptest.NewRequest("GET", "/test", nil)
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware_test.go:310:31: "POST" can be replaced by http.MethodPost (usestdlibvars)
			req := httptest.NewRequest("POST", "/test", strings.NewReader(`{"test": "data"}`))
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware_test.go:407:31: "POST" can be replaced by http.MethodPost (usestdlibvars)
			req := httptest.NewRequest("POST", "/test", strings.NewReader(requestBody))
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/middleware/logging_middleware_test.go:524:31: "POST" can be replaced by http.MethodPost (usestdlibvars)
			req := httptest.NewRequest("POST", "/api/repositories", body)
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net_test.go:102:31: "GET" can be replaced by http.MethodGet (usestdlibvars)
			req := httptest.NewRequest("GET", "/test", nil)
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net_test.go:175:31: "GET" can be replaced by http.MethodGet (usestdlibvars)
			req := httptest.NewRequest("GET", "/test", nil)
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net_test.go:274:31: "GET" can be replaced by http.MethodGet (usestdlibvars)
			req := httptest.NewRequest("GET", "/test", nil)
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net_test.go:332:31: "GET" can be replaced by http.MethodGet (usestdlibvars)
			req := httptest.NewRequest("GET", "/test", nil)
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net_test.go:436:31: "GET" can be replaced by http.MethodGet (usestdlibvars)
			req := httptest.NewRequest("GET", "/test", nil)
			                           ^
GolandProjects/codechunking/internal/adapter/inbound/api/util/net_test.go:547:31: "GET" can be replaced by http.MethodGet (usestdlibvars)
			req := httptest.NewRequest("GET", "/test", nil)
			                           ^
GolandProjects/codechunking/internal/application/common/logging/correlation_integration_test.go:237:29: "POST" can be replaced by http.MethodPost (usestdlibvars)
	req := httptest.NewRequest("POST", "/repositories", strings.NewReader(`{"url": "https://github.com/user/repo"}`))
	                           ^
GolandProjects/codechunking/cmd/api_test.go:210:7: os.Setenv() could be replaced by t.Setenv() in TestAPICommand_ConfigurationIntegration (usetesting)
		_ = os.Setenv("CODECHUNK_API_HOST", "127.0.0.1")
		    ^
GolandProjects/codechunking/cmd/api_test.go:211:7: os.Setenv() could be replaced by t.Setenv() in TestAPICommand_ConfigurationIntegration (usetesting)
		_ = os.Setenv("CODECHUNK_API_PORT", "0")
		    ^
GolandProjects/codechunking/cmd/api_test.go:212:7: os.Setenv() could be replaced by t.Setenv() in TestAPICommand_ConfigurationIntegration (usetesting)
		_ = os.Setenv("CODECHUNK_API_READ_TIMEOUT", "15s")
		    ^
GolandProjects/codechunking/cmd/api_test.go:264:19: os.CreateTemp("", ...) could be replaced by os.CreateTemp(t.TempDir(), ...) in TestAPICommand_ConfigurationIntegration (usetesting)
		tmpFile, err := os.CreateTemp("", "test-config-*.yaml")
		                ^
717 issues:
* durationcheck: 3
* embeddedstructfieldcheck: 4
* errcheck: 3
* errorlint: 35
* exhaustive: 4
* forbidigo: 3
* funcorder: 1
* gochecknoglobals: 32
* gochecknoinits: 7
* gocognit: 47
* goconst: 13
* gocritic: 20
* godot: 50
* goimports: 4
* golines: 46
* gosec: 5
* govet: 50
* iface: 3
* intrange: 50
* mnd: 50
* nestif: 25
* nilnil: 8
* noctx: 1
* nonamedreturns: 1
* perfsprint: 50
* revive: 50
* sloglint: 30
* testifylint: 50
* testpackage: 50
* unparam: 6
* usestdlibvars: 12
* usetesting: 4
